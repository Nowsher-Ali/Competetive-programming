#include<bits/stdc++.h>
using namespace std;

#define ll               long long
#define ull              unsigned long long
#define pll              pair <long long,long long>
#define IM               INT_MAX
#define Im               INT_MIN
#define fast             ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define read             freopen("input.txt", "r", stdin)
#define write            freopen("output.txt", "w", stdout)
#define pb               push_back
#define all(v)           sort(v.begin(),v.end())
#define rall(v)          sort(v.rbegin(),v.rend())
#define rev(v)           reverse(v.begin(),v.end())
#define ff               first
#define ss               second
//#define mod              1000000007
#define lcm(a, b)        ((a)*((b)/__gcd(a,b)))
#define INF              1e18
#define mem(a, b)        memset(a, b, sizeof(a))
#define endl             "\n"

const int N=100005;
const int maxN=log2(N)+1;

int table[N][maxN];
int arr[N];
int cs=1;

void build(int n)
{
    for(int i=0; i<n; i++)
        table[i][0]=i;

    for(int j=1; (1 << j)<=n; j++)
        for(int i=0; i+(1<<j)-1<n; i++)
        {
            if(arr[table[i][j-1]]<arr[table[i+(1<<(j-1))][j-1]])
                table[i][j]=table[i][j-1];
            else
                table[i][j]= table[i+(1<<(j-1))][j-1];
        }

    int x=log2(n)+1;
    for(int i=0; i<n; i++)
        for(int j=0; j<x; j++)
            table[i][j]=arr[table[i][j]];
}

int query(int a, int b)
{
    int l=b-a+1;
    int k=log2(l);
    return min(table[a][k], table[a+l-(1<<k)][k]);
}

void solve()
{
    int n,q;

    cin>>n>>q;

    for(int i=0; i<n; i++)
        cin>>arr[i];
    build(n);

    cout<<"Case "<<cs++<<":"<<endl;
    for(int i=0;i<q;i++)
    {
        int a,b;
        cin>>a>>b;
        a--;
        b--;
        cout<<query(a,b)<<endl;
    }
}

int main()
{

    fast;

    int t;

    cin>>t;

    while(t--)
        solve();

    return 0;
}
