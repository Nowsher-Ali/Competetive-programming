#include<bits/stdc++.h>
using namespace std;

#define LL               long long
#define IM               INT_MAX
#define Im               INT_MIN
#define fast             ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define read             freopen("input.txt", "r", stdin)
#define write            freopen("output.txt", "w", stdout)
#define pb(x)            push_back(x)
#define all(v)           sort(v.begin(),v.end())
#define rall(v)          sort(v.rbegin(),v.rend())
#define rev(v)           reverse(v.begin(),v.end())
#define ff               first
#define ss               second
//#define mod              1000000007
#define lcm(a, b)        ((a)*((b)/__gcd(a,b)))
#define INF              1e18

//template<class T>inline bool rd(T &x){int c=getchar();int sgn=1;while(~c&&c<'0'||c>'9'){if(c=='-')sgn=-1;c=getchar();}for(x=0;~c&&'0'<=c&&c<='9';c=getchar())x=x*10+c-'0'; x*=sgn; return ~c;}

//const int dx[]={+0,+0,+1,-1,-1,+1,-1,+1};
//const int dy[]={-1,+1,+0,+0,+1,+1,-1,-1};

const int mx=1000000007;

LL I[55][55],arr[55][55];

//Matrix exponentiation in n^3log n

void mul(LL A[55][55], LL B[55][55], int dim){

    LL res[55][55];

    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++){
            res[i][j]=0;
            for(int k=1;k<=dim;k++){
                res[i][j]+=((A[i][k]%mx *B[k][j]%mx)%mx);
                res[i][j]%=mx;
            }
        }
    }

    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++)A[i][j]=res[i][j];
    }
}

void solve()
{

    int n,m;

    cin>>m>>n;

    for(int i=1;i<=m;i++){
        for(int j=1;j<=m;j++){
            if(i==j)I[i][j]=1;
            else I[i][j]=0;
        }
    }


    for(int i=1;i<=m;i++){
        for(int j=1;j<=m;j++)cin>>arr[i][j];
    }

    while(n){
        if(n%2){
            mul(I,arr,m);
            n--;
        }
        else{
            mul(arr,arr,m);
            n/=2;
        }
    }

    for(int i=1;i<=m;i++){
        for(int j=1;j<=m;j++)cout<<I[i][j]<<" ";
        cout<<endl;
    }

}


int main()
{

    fast;

    int t;

    cin>>t;

    while(t--)
        solve();


    return 0;
}
