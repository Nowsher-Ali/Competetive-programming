#include<bits/stdc++.h>
using namespace std;

#define ll               long long
#define ull              unsigned long long
#define pll              pair <long long,long long>
#define IM               INT_MAX
#define Im               INT_MIN
#define fast             ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define read             freopen("input.txt", "r", stdin)
#define write            freopen("output.txt", "w", stdout)
#define pb               push_back
#define all(v)           sort(v.begin(),v.end())
#define rall(v)          sort(v.rbegin(),v.rend())
#define rev(v)           reverse(v.begin(),v.end())
#define ff               first
#define ss               second
//#define mod              1000000007
#define lcm(a, b)        ((a)*((b)/__gcd(a,b)))
#define INF              1e18
#define mem(a, b)        memset(a, b, sizeof(a))
#define endl             "\n"

vector<pair<int,int> >g[505];
int dis[505],cs=1;


void djikstra(int src)
{
    for(int i=0;i<505;i++)
        dis[i]=IM;
    priority_queue <pair<int,int> , vector<pair<int,int> >, greater<pair<int,int> > > p;
    p.push({0,src});
    dis[src]=0;
    while(!p.empty()){
        int curd=p.top().ff;
        int node=p.top().ss;
        //cout<<node<<" ";
        p.pop();
        for(int i=0;i<g[node].size();i++){
            int cc=g[node][i].ff;
            int nn=g[node][i].ss;
            if(max(dis[node],cc)<dis[nn])
            {
                //cout<<nn<<" ";
                dis[nn]=max(cc,dis[node]);
                p.push({max(cc,dis[node]),nn});
            }
        }
    }

}

void solve()
{

    for(int i=0;i<505;i++)
        g[i].clear();
    mem(dis,0);
    int n,m;

    cin>>n>>m;

    for(int i=0;i<m;i++)
    {
        int x,y,w;
        cin>>x>>y>>w;
        g[y].pb({w,x});
        g[x].pb({w,y});
    }

    int src;
    cin>>src;
    djikstra(src);
    cout<<"Case "<<cs++<<":"<<endl;
    for(int i=0;i<n;i++)
    {
        if(dis[i]!=IM)
            cout<<dis[i]<<endl;
        else
            cout<<"Impossible"<<endl;
    }
}

int main()
{

    fast;

    int t;

    cin>>t;

    while(t--)
        solve();

    return 0;
}