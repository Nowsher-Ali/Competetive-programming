#include<bits/stdc++.h>
using namespace std;

#define ll               long long
#define ull              unsigned long long
#define pll              pair <long long,long long>
#define IM               INT_MAX
#define Im               INT_MIN
#define fast             ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define read             freopen("input.txt", "r", stdin)
#define write            freopen("output.txt", "w", stdout)
#define pb               push_back
#define all(v)           sort(v.begin(),v.end())
#define rall(v)          sort(v.rbegin(),v.rend())
#define rev(v)           reverse(v.begin(),v.end())
#define ff               first
#define ss               second
//#define mod              1000000007
#define lcm(a, b)        ((a)*((b)/__gcd(a,b)))
#define INF              1e18
#define mem(a, b)        memset(a, b, sizeof(a))
#define endl             "\n"

vector<int>g[10005];
vector<int>tr[10005];
vector<int>scc,order;

int vis[10005];
int val[10005];
int cs=1;

int dfs(int node)
{
	vis[node] = 1;

	for(int i=0;i<g[node].size();i++)
        if(vis[g[node][i]] == 0)
            dfs(g[node][i]);

	order.pb(node);
}

int dfs1(int node)
{
	vis[node] = 1;

	for(int i=0;i<g[node].size();i++)
        if(vis[g[node][i]] == 0)
            dfs1(g[node][i]);

	//scc.pb(node);
}

void init()
{
    scc.clear();
    order.clear();
    for(int i=0;i<10005;i++)
    {
        g[i].clear();
        tr[i].clear();
    }
    mem(vis,0);
    mem(val,0);
}

void solve()
{
    init();

    int n,m;

    cin>>n>>m;

    for(int i=0; i<m; i++)
    {
        int x,y;
        cin>>x>>y;
        g[x].pb(y);
        tr[y].pb(x);
    }

    for(int i=1;i<=n;i++)
    {
        if(!vis[i])
            dfs(i);
    }

    mem(vis,0);

    rev(order);

    int ans=0;
    for(int i=0;i<order.size();i++)
		if(!vis[order[i]])
		{
			//scc.clear();
			dfs1(order[i]);
            ans++;
		}

    cout<<"Case "<<cs++<<": ";
    cout<<ans<<endl;
}

int main()
{

    fast;

    int t;

    cin>>t;

    while(t--)
        solve();

    return 0;
}