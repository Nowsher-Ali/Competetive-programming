#include<bits/stdc++.h>
using namespace std;

#define ll               long long
#define ull              unsigned long long
#define pll              pair <long long,long long>
#define IM               INT_MAX
#define Im               INT_MIN
#define fast             ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define read             freopen("input.txt", "r", stdin)
#define write            freopen("output.txt", "w", stdout)
#define pb               push_back
#define all(v)           sort(v.begin(),v.end())
#define rall(v)          sort(v.rbegin(),v.rend())
#define rev(v)           reverse(v.begin(),v.end())
#define ff               first
#define ss               second
#define MOD              1000000007
#define lcm(a, b)        ((a)*((b)/__gcd(a,b)))
#define INF              1e18
#define mem(a, b)        memset(a, b, sizeof(a))
#define endl             "\n"
#define pi               2*acos(0.0)

const int sz=100003;

vector<int>g[sz], trans[sz];
bool vis[sz];
stack<int>st;

void dfs(int node)
{
    vis[node]=1;
    for(int i=0; i<g[node].size(); i++)
    {
        if(!vis[g[node][i]])
            dfs(g[node][i]);
    }
    st.push(node);
}

void dfs1(int node)
{
    vis[node]=1;
    for(int i=0; i<g[node].size(); i++)
    {
        if(!vis[g[node][i]])
            dfs(g[node][i]);
    }
}


void SCC(int n)
{
    for(int i=1; i<=n; i++)
        dfs(i);

    mem(vis, 0);

    int cnt=0;

    while(!st.empty())
    {
        int x=st.top();
        st.pop();
        if(!vis[x]){
            dfs1(x);
            cnt++;
        }
    }

    cout<<"Number of scc: "<<cnt<<endl;
}
void solve()
{
    int n,m;

    cin>>n>>m;

    for(int i=0; i<m; i++)
    {
        int x,y;
        cin>>x>>y;
        g[x].pb(y);
        trans[y].pb(x);
    }

    SCC(n);
}


int main()
{

    fast;



    solve();

    return 0;
}


