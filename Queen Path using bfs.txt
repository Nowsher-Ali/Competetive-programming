#include<bits/stdc++.h>
using namespace std;

#define ll               long long
#define ull              unsigned long long
#define pll              pair <long long,long long>
#define IM               INT_MAX
#define Im               INT_MIN
#define fast             ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define read             freopen("input.txt", "r", stdin)
#define write            freopen("output.txt", "w", stdout)
#define pb               push_back
#define all(v)           sort(v.begin(),v.end())
#define rall(v)          sort(v.rbegin(),v.rend())
#define rev(v)           reverse(v.begin(),v.end())
#define ff               first
#define ss               second
#define MOD              1000000007
#define lcm(a, b)        ((a)*((b)/__gcd(a,b)))
#define INF              1e18
#define mem(a, b)        memset(a, b, sizeof(a))
#define endl             "\n"
#define pi               2*acos(0.0)

char a[1005][1005];
int dis[1005][1005];

const int dx[]={+0,+0,+1,-1,-1,+1,-1,+1};
const int dy[]={-1,+1,+0,+0,+1,+1,-1,-1};

int sx,sy,n,m;

bool isvalid(int x,int y)
{
    if(x>=1 && x<=n && y>=1 && y<=m && a[x][y]!='X')
        return 1;
    return 0;
}

void bfs(int x,int y)
{
    queue<pair<int,int> >q;

    q.push({x,y});

    while(!q.empty())
    {
        int xx=q.front().ff;
        int yy=q.front().ss;
        q.pop();
        for(int i=0;i<8;i++)
        {
            int aa=xx+dx[i],bb=yy+dy[i];
            while(isvalid(aa,bb)){
                if(dis[aa][bb]==0)
                {
                    q.push({aa, bb});
                    dis[aa][bb]=dis[xx][yy]+1;
                }
                else if(dis[aa][bb]!=dis[xx][yy]+1)
                    break;
                aa+=dx[i];
                bb+=dy[i];
            }
        }
    }
}

void solve()
{

    cin>>n>>m;

    int x,y;
    for(int i=1;i<=n;i++)
    {
        string s;
        cin>>s;
        for(int j=1;j<=m;j++)
        {
            a[i][j]=s[j-1];
            dis[i][j]=0;
            if(s[j-1]=='S')
            {
                x=i;
                y=j;
                dis[i][j]=1;
            }
            else if(s[j-1]=='F')
            {
                sx=i;
                sy=j;
            }
        }
    }

    bfs(x,y);
    cout<<dis[sx][sy]-1<<endl;

}

int main()
{

    fast;

    int t;

    cin>>t;

    while(t--)
        solve();

    return 0;
}
